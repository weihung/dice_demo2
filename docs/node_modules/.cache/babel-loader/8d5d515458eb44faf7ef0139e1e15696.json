{"ast":null,"code":"import config from \"./config\";\nimport ScatterJS from \"scatterjs-core\";\nimport ScatterEOS from \"scatterjs-plugin-eosjs\";\nimport Eos from \"eosjs\";\nvar account;\nScatterJS.plugins(new ScatterEOS());\nconst network = ScatterJS.Network.fromJson({\n  blockchain: \"eos\",\n  chainId: config.chainId,\n  host: config.scatterHost,\n  port: 443,\n  protocol: \"https\"\n});\nvar scatter = ScatterJS.scatter;\nconst eosOptions = {\n  expireInSeconds: 60\n};\nvar eos = scatter.eos(network, Eos, eosOptions);\nconst requiredFields = {\n  accounts: [network]\n};\nScatterJS.connect(config.gameName, {\n  network\n}).then(connected => {\n  if (!connected) {\n    window.alert(\"Scatter Not Found\");\n    return false;\n  }\n\n  scatter = ScatterJS.scatter;\n  ScatterJS.login().then(() => {\n    scatter.getIdentity(requiredFields).then(() => {\n      eos = scatter.eos(network, Eos, eosOptions);\n      account = scatter.identity.accounts.find(x => x.blockchain === \"eos\"); // console.log(account);\n    });\n  });\n});\n\nfunction getAccount() {\n  return account;\n}\n\nfunction eosBet(amount, number, contract, callback) {\n  // console.log(number);\n  const actions = [{\n    account: \"eosio.token\",\n    name: \"transfer\",\n    authorization: [{\n      actor: account.name,\n      permission: \"active\"\n    }],\n    // 参数\n    data: {\n      from: account.name,\n      to: contract,\n      quantity: \"\".concat(amount.toFixed(4), \" EOS\"),\n      memo: \"\".concat(number)\n    }\n  }];\n  eos.transaction({\n    actions: actions\n  }).then(result => {\n    //console.log(result);\n    callback(result);\n  }).catch(e => {\n    console.error(e); // console.error(typeof e);\n\n    const response = JSON.parse(e); // console.log(response);\n    // console.log(response.code);\n    // console.log(response.error);\n    // if (response.code === 500) window.alert(response.error.what);\n    //response.error.details.\n\n    callback(response.code);\n  });\n}\n\nfunction diceBet(amount, number, callback) {\n  eosBet(amount, number, config.dice_contract, callback);\n}\n\nfunction etherollBet(amount, number, callback) {\n  eosBet(amount, number, config.etheroll_contract, callback);\n}\n\nfunction coinBet(amount, number, callback) {\n  eosBet(amount, number, config.coin_contract, callback);\n}\n\nfunction twoBet(amount, number, callback) {\n  eosBet(amount, number, config.two_contract, callback);\n}\n\nfunction endlessBet(amount, number, callback) {\n  eosBet(amount, number, config.endless_contract, callback);\n}\n\nfunction getBalance(callback) {\n  if (typeof account === \"undefined\") return;\n  eos.getCurrencyBalance(\"eosio.token\", account.name, \"EOS\").then(result => {\n    //console.log(result);\n    callback(result);\n  }).catch(error => {\n    console.error(error);\n  });\n}\n\nfunction getHistory(start, contract, callback) {\n  if (typeof account === \"undefined\") return;\n  if (start < 0) start = 0;\n  const RECORD_TABLE = \"history\";\n  const tableparam = {\n    json: true,\n    code: contract,\n    scope: account.name,\n    table: RECORD_TABLE,\n    limit: 100,\n    // index_position: 1,\n    // key_type: \"int64\",\n    lower_bound: start // upper_bound: end,\n    // limit: 10\n\n  };\n  eos.getTableRows(tableparam).then(result => {\n    // console.log(result);\n    callback(result);\n  }).catch(error => {\n    console.error(error);\n  });\n}\n\nfunction getDiceHistory(start, callback) {\n  getHistory(start, config.dice_contract, callback);\n}\n\nfunction getEtherollHistory(start, callback) {\n  getHistory(start, config.etheroll_contract, callback);\n}\n\nfunction getCoinHistory(start, callback) {\n  getHistory(start, config.coin_contract, callback);\n}\n\nfunction getTwoHistory(start, callback) {\n  getHistory(start, config.two_contract, callback);\n}\n\nfunction getHistoryIndex(contract, callback) {\n  const RECORD_TABLE = \"result\";\n  const tableparam = {\n    json: true,\n    code: contract,\n    scope: account.name,\n    table: RECORD_TABLE,\n    limit: 1 // index_position: 1,\n    // key_type: \"name\",\n    // lower_bound: account.name,\n    // upper_bound: userName,\n    // limit: 10\n\n  };\n  eos.getTableRows(tableparam).then(result => {\n    // console.log(result);\n    // console.log(result.rows[0]);\n    callback(result.rows);\n  }).catch(error => {\n    console.error(error);\n  });\n}\n\nfunction getDiceHistoryIndex(callback) {\n  getHistoryIndex(config.dice_contract, callback);\n}\n\nfunction getEtherollHistoryIndex(callback) {\n  getHistoryIndex(config.etheroll_contract, callback);\n}\n\nfunction getCoinHistoryIndex(callback) {\n  getHistoryIndex(config.coin_contract, callback);\n}\n\nfunction getTwoHistoryIndex(callback) {\n  getHistoryIndex(config.two_contract, callback);\n}\n\nfunction getGameStatus(callback) {\n  const RECORD_TABLE = \"peroid\";\n  const tableparam = {\n    json: true,\n    code: config.endless_contract,\n    scope: config.endless_contract,\n    table: RECORD_TABLE,\n    limit: 1\n  };\n  eos.getTableRows(tableparam).then(result => {\n    callback(result.rows);\n  }).catch(error => {\n    console.error(error);\n  });\n}\n\nfunction newGame(callback) {\n  const actions = [{\n    account: config.endless_contract,\n    name: \"newgame\",\n    authorization: [{\n      actor: account.name,\n      permission: \"active\"\n    }],\n    // 参数\n    data: {}\n  }];\n  eos.transaction({\n    actions: actions\n  }).then(result => {\n    callback(result);\n  }).catch(e => {\n    console.error(e);\n    const response = JSON.parse(e);\n    callback(response.code);\n  });\n}\n\nfunction rollDice(callback) {\n  const actions = [{\n    account: config.endless_contract,\n    name: \"rolldice\",\n    authorization: [{\n      actor: account.name,\n      permission: \"active\"\n    }],\n    // 参数\n    data: {}\n  }];\n  eos.transaction({\n    actions: actions\n  }).then(result => {\n    callback(result);\n  }).catch(e => {\n    console.error(e);\n    const response = JSON.parse(e);\n    callback(response.code);\n  });\n}\n\nfunction getBetList(callback) {\n  const RECORD_TABLE = \"bet\";\n  const tableparam = {\n    json: true,\n    code: config.endless_contract,\n    scope: config.endless_contract,\n    table: RECORD_TABLE,\n    limit: 1000\n  };\n  eos.getTableRows(tableparam).then(result => {\n    callback(result.rows);\n  }).catch(error => {\n    console.error(error);\n  });\n}\n\nfunction getGameResult(callback) {\n  const RECORD_TABLE = \"result\";\n  const tableparam = {\n    json: true,\n    code: config.endless_contract,\n    scope: config.endless_contract,\n    table: RECORD_TABLE,\n    limit: 1\n  };\n  eos.getTableRows(tableparam).then(result => {\n    callback(result.rows);\n  }).catch(error => {\n    console.error(error);\n  });\n}\n\nexport default {\n  getAccount,\n  diceBet,\n  etherollBet,\n  coinBet,\n  twoBet,\n  endlessBet,\n  getDiceHistoryIndex,\n  getEtherollHistoryIndex,\n  getCoinHistoryIndex,\n  getTwoHistoryIndex,\n  getDiceHistory,\n  getEtherollHistory,\n  getCoinHistory,\n  getTwoHistory,\n  getBalance,\n  getGameStatus,\n  getGameResult,\n  getBetList,\n  newGame,\n  rollDice\n};","map":{"version":3,"sources":["/Users/weihung/Documents/workspace/dice/frontend/dice-demo/src/eos/Scatter.js"],"names":["config","ScatterJS","ScatterEOS","Eos","account","plugins","network","Network","fromJson","blockchain","chainId","host","scatterHost","port","protocol","scatter","eosOptions","expireInSeconds","eos","requiredFields","accounts","connect","gameName","then","connected","window","alert","login","getIdentity","identity","find","x","getAccount","eosBet","amount","number","contract","callback","actions","name","authorization","actor","permission","data","from","to","quantity","toFixed","memo","transaction","result","catch","e","console","error","response","JSON","parse","code","diceBet","dice_contract","etherollBet","etheroll_contract","coinBet","coin_contract","twoBet","two_contract","endlessBet","endless_contract","getBalance","getCurrencyBalance","getHistory","start","RECORD_TABLE","tableparam","json","scope","table","limit","lower_bound","getTableRows","getDiceHistory","getEtherollHistory","getCoinHistory","getTwoHistory","getHistoryIndex","rows","getDiceHistoryIndex","getEtherollHistoryIndex","getCoinHistoryIndex","getTwoHistoryIndex","getGameStatus","newGame","rollDice","getBetList","getGameResult"],"mappings":"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","sourcesContent":["import config from \"./config\";\nimport ScatterJS from \"scatterjs-core\";\nimport ScatterEOS from \"scatterjs-plugin-eosjs\";\nimport Eos from \"eosjs\";\n\nvar account;\n\nScatterJS.plugins(new ScatterEOS());\n\nconst network = ScatterJS.Network.fromJson({\n  blockchain: \"eos\",\n  chainId: config.chainId,\n  host: config.scatterHost,\n  port: 443,\n  protocol: \"https\"\n});\n\nvar scatter = ScatterJS.scatter;\nconst eosOptions = { expireInSeconds: 60 };\nvar eos = scatter.eos(network, Eos, eosOptions);\nconst requiredFields = { accounts: [network] };\n\nScatterJS.connect(config.gameName, { network }).then(connected => {\n  if (!connected) {\n    window.alert(\"Scatter Not Found\");\n    return false;\n  }\n  scatter = ScatterJS.scatter;\n  ScatterJS.login().then(() => {\n    scatter.getIdentity(requiredFields).then(() => {\n      eos = scatter.eos(network, Eos, eosOptions);\n      account = scatter.identity.accounts.find(x => x.blockchain === \"eos\");\n      // console.log(account);\n    });\n  });\n});\n\nfunction getAccount() {\n  return account;\n}\n\nfunction eosBet(amount, number, contract, callback) {\n  // console.log(number);\n  const actions = [\n    {\n      account: \"eosio.token\",\n      name: \"transfer\",\n      authorization: [\n        {\n          actor: account.name,\n          permission: \"active\"\n        }\n      ],\n      // 参数\n      data: {\n        from: account.name,\n        to: contract,\n        quantity: `${amount.toFixed(4)} EOS`,\n        memo: `${number}`\n      }\n    }\n  ];\n  eos\n    .transaction({ actions: actions })\n    .then(result => {\n      //console.log(result);\n      callback(result);\n    })\n    .catch(e => {\n      console.error(e);\n      // console.error(typeof e);\n      const response = JSON.parse(e);\n      // console.log(response);\n      // console.log(response.code);\n      // console.log(response.error);\n      // if (response.code === 500) window.alert(response.error.what);\n      //response.error.details.\n      callback(response.code);\n    });\n}\n\nfunction diceBet(amount, number, callback) {\n  eosBet(amount, number, config.dice_contract, callback);\n}\nfunction etherollBet(amount, number, callback) {\n  eosBet(amount, number, config.etheroll_contract, callback);\n}\nfunction coinBet(amount, number, callback) {\n  eosBet(amount, number, config.coin_contract, callback);\n}\nfunction twoBet(amount, number, callback) {\n  eosBet(amount, number, config.two_contract, callback);\n}\nfunction endlessBet(amount, number, callback) {\n  eosBet(amount, number, config.endless_contract, callback);\n}\n\nfunction getBalance(callback) {\n  if (typeof account === \"undefined\") return;\n  eos\n    .getCurrencyBalance(\"eosio.token\", account.name, \"EOS\")\n    .then(result => {\n      //console.log(result);\n      callback(result);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\nfunction getHistory(start, contract, callback) {\n  if (typeof account === \"undefined\") return;\n  if (start < 0) start = 0;\n  const RECORD_TABLE = \"history\";\n  const tableparam = {\n    json: true,\n    code: contract,\n    scope: account.name,\n    table: RECORD_TABLE,\n    limit: 100,\n    // index_position: 1,\n    // key_type: \"int64\",\n    lower_bound: start\n    // upper_bound: end,\n    // limit: 10\n  };\n  eos\n    .getTableRows(tableparam)\n    .then(result => {\n      // console.log(result);\n      callback(result);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\nfunction getDiceHistory(start, callback) {\n  getHistory(start, config.dice_contract, callback);\n}\nfunction getEtherollHistory(start, callback) {\n  getHistory(start, config.etheroll_contract, callback);\n}\nfunction getCoinHistory(start, callback) {\n  getHistory(start, config.coin_contract, callback);\n}\nfunction getTwoHistory(start, callback) {\n  getHistory(start, config.two_contract, callback);\n}\n\nfunction getHistoryIndex(contract, callback) {\n  const RECORD_TABLE = \"result\";\n  const tableparam = {\n    json: true,\n    code: contract,\n    scope: account.name,\n    table: RECORD_TABLE,\n    limit: 1\n    // index_position: 1,\n    // key_type: \"name\",\n    // lower_bound: account.name,\n    // upper_bound: userName,\n    // limit: 10\n  };\n  eos\n    .getTableRows(tableparam)\n    .then(result => {\n      // console.log(result);\n      // console.log(result.rows[0]);\n      callback(result.rows);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\nfunction getDiceHistoryIndex(callback) {\n  getHistoryIndex(config.dice_contract, callback);\n}\nfunction getEtherollHistoryIndex(callback) {\n  getHistoryIndex(config.etheroll_contract, callback);\n}\nfunction getCoinHistoryIndex(callback) {\n  getHistoryIndex(config.coin_contract, callback);\n}\nfunction getTwoHistoryIndex(callback) {\n  getHistoryIndex(config.two_contract, callback);\n}\n\nfunction getGameStatus(callback) {\n  const RECORD_TABLE = \"peroid\";\n  const tableparam = {\n    json: true,\n    code: config.endless_contract,\n    scope: config.endless_contract,\n    table: RECORD_TABLE,\n    limit: 1\n  };\n  eos\n    .getTableRows(tableparam)\n    .then(result => {\n      callback(result.rows);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\nfunction newGame(callback) {\n  const actions = [\n    {\n      account: config.endless_contract,\n      name: \"newgame\",\n      authorization: [\n        {\n          actor: account.name,\n          permission: \"active\"\n        }\n      ],\n      // 参数\n      data: {\n      }\n    }\n  ];\n  eos\n    .transaction({ actions: actions })\n    .then(result => {\n      callback(result);\n    })\n    .catch(e => {\n      console.error(e);\n      const response = JSON.parse(e);\n      callback(response.code);\n    });\n}\n\nfunction rollDice(callback) {\n  const actions = [\n    {\n      account: config.endless_contract,\n      name: \"rolldice\",\n      authorization: [\n        {\n          actor: account.name,\n          permission: \"active\"\n        }\n      ],\n      // 参数\n      data: {\n      }\n    }\n  ];\n  eos\n    .transaction({ actions: actions })\n    .then(result => {\n      callback(result);\n    })\n    .catch(e => {\n      console.error(e);\n      const response = JSON.parse(e);\n      callback(response.code);\n    });\n}\n\nfunction getBetList(callback) {\n  const RECORD_TABLE = \"bet\";\n  const tableparam = {\n    json: true,\n    code: config.endless_contract,\n    scope: config.endless_contract,\n    table: RECORD_TABLE,\n    limit: 1000\n  };\n  eos\n    .getTableRows(tableparam)\n    .then(result => {\n      callback(result.rows);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\nfunction getGameResult(callback) {\n  const RECORD_TABLE = \"result\";\n  const tableparam = {\n    json: true,\n    code: config.endless_contract,\n    scope: config.endless_contract,\n    table: RECORD_TABLE,\n    limit: 1\n  };\n  eos\n    .getTableRows(tableparam)\n    .then(result => {\n      callback(result.rows);\n    })\n    .catch(error => {\n      console.error(error);\n    });\n}\n\nexport default {\n  getAccount,\n\n  diceBet,\n  etherollBet,\n  coinBet,\n  twoBet,\n  endlessBet,\n\n  getDiceHistoryIndex,\n  getEtherollHistoryIndex,\n  getCoinHistoryIndex,\n  getTwoHistoryIndex,\n\n  getDiceHistory,\n  getEtherollHistory,\n  getCoinHistory,\n  getTwoHistory,\n\n  getBalance,\n\n  getGameStatus,\n  getGameResult,\n  getBetList,\n\n  newGame,\n  rollDice,\n};\n"]},"metadata":{},"sourceType":"module"}