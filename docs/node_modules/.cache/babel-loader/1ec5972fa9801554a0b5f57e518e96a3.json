{"ast":null,"code":"import _defineProperty from \"/Users/weihung/Documents/workspace/dice/frontend/dice-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/weihung/Documents/workspace/dice/frontend/dice-demo/src/two_dice/TwoDice.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport SelecteDice from './component/SelectDice';\nimport Balance from '../component/Balance';\nimport BetTimes from '../component/BetTimes';\nimport Odds from '../component/Odds';\nimport Chance from '../component/Chance';\nimport Bet from '../component/Bet';\nimport History from './component/History';\nimport logo from '../images/two_dice.png';\nimport '../css/Main.css';\nimport Scatter from '../eos/Scatter';\nconst chances = [2.78, 5.56, 8.33, 11.11, 13.89, 16.67, 13.89, 11.11, 8.33, 5.56, 2.78];\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAutoBetChange = checked => {\n      this.setState(_objectSpread({}, this.state, {\n        autoBet: checked\n      }));\n    };\n\n    this.handleOnBet = ({\n      bet,\n      autoBet\n    }) => {\n      var callApi = !this.state.callApi;\n      this.shouldStop = !callApi;\n      this.autoBet = autoBet;\n      this.setState(_objectSpread({}, this.state, {\n        disableBet: !autoBet,\n        callApi: callApi\n      }));\n      this.startBet(bet);\n    };\n\n    this.handleOnChange = value => {\n      if (value < 1) return;\n      var selectedCount = 0;\n      var chance = 0;\n\n      for (var i = 0; i < 11; i++) {\n        if (value & 1 << i) {\n          selectedCount++;\n          chance += chances[i];\n        }\n      }\n\n      if (selectedCount > 10) return;\n      this.setState(_objectSpread({}, this.state, {\n        value,\n        chance,\n        odds: 98 / chance\n      }));\n    };\n\n    this.state = {\n      value: 1,\n      chance: chances[0],\n      odds: 98 / chances[0],\n      disableBet: false,\n      history: [],\n      amount: '0.0000 EOS',\n      betTimes: 0,\n      amountHistory: [],\n      callApi: false\n    };\n    this.bet = 0.01;\n    this.autoBet = false;\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.getBalance();\n      this.getHistory();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    this.shouldStop = true;\n    clearInterval(this.interval);\n  }\n\n  startBet(bet) {\n    Scatter.twoBet(bet, this.state.value, result => {\n      this.setState(_objectSpread({}, this.state, {\n        betTimes: this.state.betTimes + 1\n      }));\n      if (result === 500) this.shouldStop = true;\n\n      if (!this.shouldStop && this.autoBet) {\n        this.startBet(bet);\n        return;\n      }\n\n      this.setState(_objectSpread({}, this.state, {\n        disableBet: false,\n        callApi: false\n      }));\n    });\n  }\n\n  getBalance(callback) {\n    Scatter.getBalance(result => {\n      const r = result[0].split(\" \", 1);\n      const amount = parseFloat(r);\n      var amountHistory = [];\n\n      try {\n        amountHistory = this.state.amountHistory;\n      } catch (e) {\n        console.log(e);\n      }\n\n      amountHistory.push(amount);\n      this.setState(_objectSpread({}, this.state, {\n        amount: result[0],\n        amountHistory\n      }));\n\n      if (amount < parseFloat(this.bet)) {\n        this.shouldStop = true;\n      }\n\n      try {\n        callback(result[0]);\n      } catch (e) {}\n    });\n  }\n\n  getHistory() {\n    Scatter.getTwoHistoryIndex(row => {\n      const start = row[0].key - 14;\n      Scatter.getTwoHistory(start, result => {\n        var history = [];\n        result.rows.forEach(element => {\n          var numbers = [];\n\n          for (var i = 0; i < 12; i++) {\n            if (element.number & 1 << i) {\n              numbers.push(1);\n            } else {\n              numbers.push(0);\n            }\n          }\n\n          history.push({\n            amount: element.bet / 10000,\n            number: numbers,\n            RandomResult: element.result + 2,\n            winamount: element.win / 10000\n          });\n        });\n        this.setState(_objectSpread({}, this.state, {\n          history\n        }));\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"div1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div21\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div31\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      height: 80,\n      alt: \"Two Dice logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Balance, {\n      value: this.state.amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(BetTimes, {\n      value: this.state.betTimes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(SelecteDice, {\n      value: this.state.value,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(Bet, {\n      value: this.bet,\n      disableBet: this.state.disableBet,\n      callApi: this.state.callApi,\n      onBet: this.handleOnBet,\n      onChange: value => {\n        this.bet = value;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"div32\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Odds, {\n      odds: this.state.odds.toFixed(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Chance, {\n      value: this.state.chance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"div33\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(History, {\n      value: this.state.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/weihung/Documents/workspace/dice/frontend/dice-demo/src/two_dice/TwoDice.js"],"names":["React","SelecteDice","Balance","BetTimes","Odds","Chance","Bet","History","logo","Scatter","chances","Main","Component","constructor","props","handleAutoBetChange","checked","setState","state","autoBet","handleOnBet","bet","callApi","shouldStop","disableBet","startBet","handleOnChange","value","selectedCount","chance","i","odds","history","amount","betTimes","amountHistory","componentDidMount","interval","setInterval","getBalance","getHistory","componentWillUnmount","clearInterval","twoBet","result","callback","r","split","parseFloat","e","console","log","push","getTwoHistoryIndex","row","start","key","getTwoHistory","rows","forEach","element","numbers","number","RandomResult","winamount","win","render","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SelecteDice from './component/SelectDice';\nimport Balance from '../component/Balance';\nimport BetTimes from '../component/BetTimes';\nimport Odds from '../component/Odds';\nimport Chance from '../component/Chance';\nimport Bet from '../component/Bet';\nimport History from './component/History';\n\nimport logo from '../images/two_dice.png';\n\nimport '../css/Main.css';\n\nimport Scatter from '../eos/Scatter'\n\nconst chances = [2.78, 5.56, 8.33, 11.11, 13.89, 16.67, 13.89, 11.11, 8.33, 5.56, 2.78 ]\n\nexport default class Main extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 1,\n      chance: chances[0],\n      odds: 98 / chances[0],\n      disableBet: false,\n      history: [],\n      amount: '0.0000 EOS',\n      betTimes: 0,\n      amountHistory: [],\n      callApi: false\n    };\n    this.bet = 0.01\n    this.autoBet = false\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.getBalance();\n      this.getHistory();\n    }, 1000)\n  }\n\n  componentWillUnmount() {\n    this.shouldStop = true;\n    clearInterval(this.interval)\n  }\n\n  handleAutoBetChange = (checked) => {\n    this.setState({...this.state, autoBet: checked});\n  }\n\n  startBet(bet) {\n    Scatter.twoBet(bet, this.state.value, (result) => {\n      this.setState({...this.state, betTimes: this.state.betTimes + 1});\n      if (result === 500) this.shouldStop = true;\n      if (!this.shouldStop && this.autoBet) {\n        this.startBet(bet);\n        return;\n      }\n      this.setState({...this.state, \n        disableBet: false,\n        callApi: false,\n      });\n    });\n  }\n\n  getBalance(callback) {\n    Scatter.getBalance(result => {\n      const r = result[0].split(\" \", 1)\n      const amount = parseFloat(r)\n      var amountHistory = [];\n      try {\n        amountHistory = this.state.amountHistory\n      } catch (e) {\n        console.log(e);\n      }\n      amountHistory.push(amount)\n      this.setState({...this.state, amount: result[0], amountHistory});\n      if (amount < parseFloat(this.bet)) {\n        this.shouldStop = true;\n      }\n      try {\n        callback(result[0]);\n      } catch (e) {\n\n      }\n    })\n  }\n\n  getHistory() {\n    Scatter.getTwoHistoryIndex( row =>{\n      const start = row[0].key - 14;\n      Scatter.getTwoHistory(start, result => {\n        var history = []\n        result.rows.forEach(element => {\n          var numbers = []\n          for (var i = 0; i < 12; i++) { \n            if (element.number & (1 << i)){\n              numbers.push(1);\n            } else {\n              numbers.push(0);\n            }\n          }\n          \n          history.push({\n            amount: element.bet / 10000,\n            number: numbers,\n            RandomResult: element.result + 2,\n            winamount: element.win / 10000,\n          })\n        })\n        this.setState({...this.state, \n          history,\n        });\n      })\n    });\n  }\n\n  handleOnBet = ({bet, autoBet}) => {\n    var callApi = !this.state.callApi;\n    this.shouldStop = !callApi;\n    this.autoBet = autoBet;\n    this.setState({...this.state, \n      disableBet: !autoBet,\n      callApi: callApi,\n    });\n    this.startBet(bet)\n  }\n\n  handleOnChange = value => {\n    if (value < 1) return\n    var selectedCount = 0;\n    var chance = 0;\n    for (var i = 0; i < 11; i++) { \n      if (value & (1 << i)) {\n        selectedCount++\n        chance += chances[i]\n      }\n    }\n    if (selectedCount > 10) return\n    this.setState({...this.state, value, chance, odds: (98 / chance)})\n  }\n\n  render() {\n    return (\n      <div className=\"div1\">\n        <div className=\"div21\">\n          <div className=\"div31\">\n            <img src={logo} height={80} alt=\"Two Dice logo\"/>\n            <Balance value={this.state.amount} />\n            <BetTimes value={this.state.betTimes} />\n            <SelecteDice value={this.state.value} onChange={this.handleOnChange}/>\n            <Bet value={this.bet} \n              disableBet={this.state.disableBet} \n              callApi={this.state.callApi} \n              onBet={this.handleOnBet} \n              onChange={(value) => {\n                this.bet = value;\n              }}\n            />\n          </div>\n          <div className=\"div32\">\n            <div>\n              < Odds odds={this.state.odds.toFixed(2)} />\n            </div>\n            <div>\n              <Chance value={this.state.chance} />\n            </div>\n          </div>\n          <div className=\"div33\">\n              <History value={this.state.history} />\n          </div>\n        </div>\n      \n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}