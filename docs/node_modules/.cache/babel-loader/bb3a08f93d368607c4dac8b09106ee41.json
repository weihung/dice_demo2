{"ast":null,"code":"import _defineProperty from \"/Users/weihung/Documents/workspace/dice/frontend/dice-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/weihung/Documents/workspace/dice/frontend/dice-demo/src/endless/Endless.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport \"./Endless.css\";\nimport PlayerList from \"./component/PlayerList\";\nimport Controller from \"./component/Controller\";\nimport Countdown from \"./component/Countdown\";\nimport BigText from \"./component/BigText\";\nimport Chart from \"../component/Chart\";\nimport Scatter from \"../eos/Scatter\";\nexport default class Endless extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disableBet: false,\n      playerList: [],\n      balance: \"0.0000 EOS\",\n      betTimes: 0,\n      status: 0,\n      stopTime: 0,\n      peroid: 0,\n      startTime: 0,\n      endTime: 0,\n      drawData: [1],\n      autoBet: false\n    };\n    this.bet = 0.01;\n    this.number = 1.05;\n    this.result = 0;\n    this.data = [];\n    this.alreadyBet = false;\n    this.handleBet = this.handleBet.bind(this);\n    this.handleStopBet = this.handleStopBet.bind(this);\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.getBalance();\n      this.getBetList();\n    }, 1000);\n    this.timeout = setTimeout(() => {\n      this.getGameStatus();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    this.shouldStop = true;\n    clearInterval(this.interval);\n    clearTimeout(this.timeout);\n  }\n\n  getBalance() {\n    Scatter.getBalance(result => {\n      const r = result[0].split(\" \", 1);\n      const amount = parseFloat(r);\n      this.setState(_objectSpread({}, this.state, {\n        balance: result[0]\n      }));\n\n      if (amount < parseFloat(this.bet)) {\n        this.setState({\n          autoBet: false\n        });\n      }\n    });\n  }\n\n  getGameStatus() {\n    // let startGame = false;\n    Scatter.getGameStatus(result => {\n      try {\n        if (result.length === 0 || result[0].status === 2) {\n          // Scatter.newGame(result => {\n          //   if (startGame) return;\n          //   startGame = true;\n          //   this.getGameStatus();\n          // });\n          return;\n        }\n\n        var status = 0;\n\n        if (Date.now() > result[0].startTime * 1000) {\n          status = 1;\n\n          if (!this.alreadyBet && this.state.autoBet) {\n            this.alreadyBet = true;\n            Scatter.endlessBet(this.bet, this.number * 100, () => {});\n          }\n        }\n\n        if (Date.now() >= result[0].openTime * 1000) {\n          status = 3;\n          this.alreadyBet = false;\n        } else if (Date.now() > result[0].endTime * 1000) {\n          status = 2;\n        }\n\n        this.setState({\n          startTime: result[0].startTime * 1000,\n          endTime: result[0].endTime * 1000,\n          peroid: result[0].key,\n          status,\n          drawData: [1]\n        });\n\n        if (status === 3) {\n          this.getGameResult();\n          return;\n        }\n\n        this.timeout = setTimeout(() => {\n          this.getGameStatus();\n        }, 1000);\n      } catch (e) {\n        console.log(e);\n      }\n    });\n  }\n\n  getGameResult() {\n    clearTimeout(this.timeout);\n    Scatter.getGameResult(result => {\n      if (result.length < 1 || result[0].key !== this.state.peroid) {\n        /*Scatter.rollDice(() => {\n          this.timeout = setTimeout(() => {\n            this.getGameResult();\n          }, 1000);\n        });*/\n        this.timeout = setTimeout(() => {\n          this.getGameResult();\n        }, 1000);\n        return;\n      }\n\n      this.result = result[0].result;\n      this.data = [1];\n      this.setState({\n        status: 4\n      });\n      this.startDraw();\n    });\n  }\n\n  startDraw() {\n    clearInterval(this.interval);\n    const factory = 1.02;\n    var last = this.data[this.data.length - 1];\n    last = last * factory;\n    var stop = false;\n\n    if (last * factory > this.result / 100) {\n      last = this.result / 100;\n      stop = true; // if (this.data.length > 1) this.data = this.data.slice(0, this.data.length - 1)\n    }\n\n    last = last.toFixed(2);\n    this.data.push(parseFloat(last));\n    this.setState({\n      drawData: this.data\n    });\n\n    if (stop) {\n      this.timeout = setTimeout(() => {\n        this.getGameStatus();\n        this.interval = setInterval(() => {\n          this.getBalance();\n          this.getBetList();\n        }, 1000);\n      }, 5000);\n      return;\n    }\n\n    this.timeout = setTimeout(() => {\n      this.startDraw();\n    }, 100);\n  }\n\n  getBetList() {\n    if (this.state.status === 3) return;\n    Scatter.getBetList(playerList => {\n      this.setState({\n        playerList\n      });\n    });\n  }\n\n  handleBet(odds, amount, autoBet) {\n    this.setState({\n      autoBet\n    });\n    this.number = odds;\n    this.bet = amount;\n    this.alreadyBet = true;\n    Scatter.endlessBet(amount, odds * 100, () => {});\n  }\n\n  handleStopBet() {\n    this.setState({\n      autoBet: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Endless\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EndlessLeft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"EndlessChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.state.status === 0 && React.createElement(BigText, {\n      value: \"\\u51C6\\u5907\\u4E2D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), this.state.status === 1 && React.createElement(Countdown, {\n      value: this.state.endTime,\n      peroid: this.state.peroid,\n      onFinish: () => {\n        this.setState({\n          status: 2\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), this.state.status === 2 && React.createElement(BigText, {\n      value: \"\\u505C\\u6B62\\u4E0B\\u6CE8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), this.state.status === 3 && React.createElement(BigText, {\n      value: \"\\u505C\\u6B62\\u4E0B\\u6CE8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), this.state.status === 4 && React.createElement(Chart, {\n      value: this.state.drawData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"EndlessController\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Controller, {\n      disableBet: this.state.status !== 1,\n      onBet: this.handleBet,\n      autoBet: this.state.autoBet,\n      stopBet: this.handleStopBet,\n      balance: this.state.balance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"EndlessBetList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(PlayerList, {\n      value: this.state.playerList,\n      result: this.state.drawData[this.state.drawData.length - 1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/weihung/Documents/workspace/dice/frontend/dice-demo/src/endless/Endless.js"],"names":["React","PlayerList","Controller","Countdown","BigText","Chart","Scatter","Endless","Component","constructor","props","state","disableBet","playerList","balance","betTimes","status","stopTime","peroid","startTime","endTime","drawData","autoBet","bet","number","result","data","alreadyBet","handleBet","bind","handleStopBet","componentDidMount","interval","setInterval","getBalance","getBetList","timeout","setTimeout","getGameStatus","componentWillUnmount","shouldStop","clearInterval","clearTimeout","r","split","amount","parseFloat","setState","length","Date","now","endlessBet","openTime","key","getGameResult","e","console","log","startDraw","factory","last","stop","toFixed","push","odds","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Endless.css\";\nimport PlayerList from \"./component/PlayerList\";\nimport Controller from \"./component/Controller\";\nimport Countdown from \"./component/Countdown\";\nimport BigText from \"./component/BigText\";\nimport Chart from \"../component/Chart\";\n\nimport Scatter from \"../eos/Scatter\";\n\nexport default class Endless extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disableBet: false,\n      playerList: [],\n      balance: \"0.0000 EOS\",\n      betTimes: 0,\n      status: 0,\n      stopTime: 0,\n      peroid: 0,\n      startTime: 0,\n      endTime: 0,\n      drawData: [1],\n      autoBet: false,\n    };\n    this.bet = 0.01;\n    this.number = 1.05;\n    this.result = 0;\n    this.data = [];\n    this.alreadyBet = false;\n\n    this.handleBet = this.handleBet.bind(this)\n    this.handleStopBet = this.handleStopBet.bind(this)\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.getBalance();\n      this.getBetList();\n    }, 1000);\n    this.timeout = setTimeout(() => {\n      this.getGameStatus();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    this.shouldStop = true;\n    clearInterval(this.interval);\n    clearTimeout(this.timeout);\n  }\n\n  getBalance() {\n    Scatter.getBalance(result => {\n      const r = result[0].split(\" \", 1);\n      const amount = parseFloat(r);\n      this.setState({ ...this.state, balance: result[0] });\n      if (amount < parseFloat(this.bet)) {\n        this.setState({autoBet: false});\n      }\n    });\n  }\n\n  getGameStatus() {\n    // let startGame = false;\n    Scatter.getGameStatus(result => {\n      try {\n        if (result.length === 0 || result[0].status === 2) {\n          // Scatter.newGame(result => {\n          //   if (startGame) return;\n          //   startGame = true;\n          //   this.getGameStatus();\n          // });\n          return;\n        }\n        var status = 0;\n        if (Date.now() > result[0].startTime * 1000) {\n          status = 1;\n          if (!this.alreadyBet && this.state.autoBet) {\n            this.alreadyBet = true;\n            Scatter.endlessBet(this.bet, this.number * 100, ()=>{})\n          }\n        }\n        if (Date.now() >= result[0].openTime * 1000) {\n          status = 3;\n          this.alreadyBet = false;\n        } else if (Date.now() > result[0].endTime * 1000) {\n          status = 2;\n        }\n        this.setState({\n          startTime: result[0].startTime * 1000,\n          endTime: result[0].endTime * 1000,\n          peroid: result[0].key,\n          status,\n          drawData: [1]\n        });\n        if (status === 3) {\n          this.getGameResult();\n          return;\n        }\n        this.timeout = setTimeout(() => {\n          this.getGameStatus();\n        }, 1000);\n      } catch (e) {\n        console.log(e);\n      }\n    });\n  }\n\n  getGameResult() {\n    clearTimeout(this.timeout);\n    Scatter.getGameResult(result => {\n      if (result.length < 1 || result[0].key !== this.state.peroid) {\n        /*Scatter.rollDice(() => {\n          this.timeout = setTimeout(() => {\n            this.getGameResult();\n          }, 1000);\n        });*/\n        this.timeout = setTimeout(() => {\n          this.getGameResult();\n        }, 1000);\n        return;\n      }\n      this.result = result[0].result;\n      this.data = [1];\n      this.setState({status:4})\n      this.startDraw();\n    });\n  }\n\n  startDraw() {\n    clearInterval(this.interval);\n    const factory = 1.02;\n    var last = this.data[this.data.length - 1];\n    last = last * factory;\n    var stop = false;\n    if ((last * factory) > this.result / 100) {\n      last = this.result / 100;\n      stop = true;\n      // if (this.data.length > 1) this.data = this.data.slice(0, this.data.length - 1)\n    }\n    last = last.toFixed(2)\n    this.data.push(parseFloat(last));\n    this.setState({ drawData: this.data });\n    if (stop) {\n      this.timeout = setTimeout(() => {\n        this.getGameStatus()\n        this.interval = setInterval(() => {\n          this.getBalance();\n          this.getBetList();\n        }, 1000);\n      }, 5000);\n      \n      return\n    }\n    this.timeout = setTimeout(() => {\n      this.startDraw();\n    }, 100);\n  }\n\n  getBetList(){\n    if (this.state.status === 3) return\n    Scatter.getBetList(playerList=>{\n      this.setState({playerList})\n    })\n  }\n\n  handleBet(odds, amount, autoBet){\n    this.setState({autoBet})\n    this.number = odds\n    this.bet = amount\n    this.alreadyBet = true;\n    Scatter.endlessBet(amount, odds * 100, ()=>{})\n  }\n\n  handleStopBet(){\n    this.setState({autoBet: false});\n  }\n\n  render() {\n    return (\n      <div className=\"Endless\">\n        <div className=\"EndlessLeft\">\n          <div className=\"EndlessChart\">\n            {this.state.status === 0 && <BigText value=\"准备中\" />}\n            {this.state.status === 1 && (\n              <Countdown\n                value={this.state.endTime}\n                peroid={this.state.peroid}\n                onFinish={() => {\n                  this.setState({ status: 2 });\n                }}\n              />\n            )}\n            {this.state.status === 2 && <BigText value=\"停止下注\" />}\n            {this.state.status === 3 && <BigText value=\"停止下注\" />}\n            {this.state.status === 4 && <Chart value={this.state.drawData} />}\n          </div>\n          <div className=\"EndlessController\">\n            <Controller \n              disableBet={this.state.status !== 1} \n              onBet={this.handleBet} \n              autoBet={this.state.autoBet} \n              stopBet={this.handleStopBet} \n              balance={this.state.balance}\n            />\n          </div>\n        </div>\n        <div className=\"EndlessBetList\">\n          <PlayerList value={this.state.playerList} result={this.state.drawData[this.state.drawData.length - 1]}/>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}