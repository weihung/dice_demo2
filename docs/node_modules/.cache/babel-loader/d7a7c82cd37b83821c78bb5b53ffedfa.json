{"ast":null,"code":"import * as React from 'react';\nimport * as hoistNonReactStatics_ from 'hoist-non-react-statics'; // Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\n\nconst hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\nimport { invariantIntlContext } from '../utils';\n\nfunction getDisplayName(Component) {\n  return Component.displayName || Component.name || 'Component';\n} // TODO: We should provide initial value here\n\n\nconst IntlContext = React.createContext(null);\nconst IntlConsumer = IntlContext.Consumer,\n      IntlProvider = IntlContext.Provider;\nexport const Provider = IntlProvider;\nexport const Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n  const _ref = options || {},\n        _ref$intlPropName = _ref.intlPropName,\n        intlPropName = _ref$intlPropName === void 0 ? 'intl' : _ref$intlPropName,\n        _ref$forwardRef = _ref.forwardRef,\n        forwardRef = _ref$forwardRef === void 0 ? false : _ref$forwardRef,\n        _ref$enforceContext = _ref.enforceContext,\n        enforceContext = _ref$enforceContext === void 0 ? true : _ref$enforceContext;\n\n  const WithIntl = props => React.createElement(IntlConsumer, null, intl => {\n    if (enforceContext) {\n      invariantIntlContext(intl);\n    }\n\n    return React.createElement(WrappedComponent, Object.assign({}, props, {\n      [intlPropName]: intl\n    }, {\n      ref: forwardRef ? props.forwardedRef : null\n    }));\n  });\n\n  WithIntl.displayName = \"injectIntl(\".concat(getDisplayName(WrappedComponent), \")\");\n  WithIntl.WrappedComponent = WrappedComponent;\n\n  if (forwardRef) {\n    return hoistNonReactStatics(React.forwardRef((props, ref) => React.createElement(WithIntl, Object.assign({}, props, {\n      forwardedRef: ref\n    }))), WrappedComponent);\n  }\n\n  return hoistNonReactStatics(WithIntl, WrappedComponent);\n}","map":null,"metadata":{},"sourceType":"module"}