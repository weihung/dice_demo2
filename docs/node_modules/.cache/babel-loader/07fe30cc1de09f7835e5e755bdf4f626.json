{"ast":null,"code":"var _jsxFileName = \"/Users/weihung/Documents/workspace/dice/frontend/dice-demo/src/component/Chart.js\";\nimport React, { Component } from \"react\";\nimport CanvasJSReact from \"../assets/canvasjs.react\"; // var CanvasJS = CanvasJSReact.CanvasJS;\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart; // var startTime = 0, endTime = 0;\n\nexport default class Chart extends Component {\n  // componentDidMount() {\n  // \tendTime = new Date();\n  // \tdocument.getElementById(\"timeToRender\").innerHTML = \"Time to Render: \" + (endTime - startTime) + \"ms\";\n  // }\n  render() {\n    var data = [];\n    var dataSeries = {\n      type: \"spline\"\n    };\n    var dataPoints = [];\n    var i = 0;\n    this.props.value.forEach(element => {\n      dataPoints.push({\n        x: ++i,\n        y: element\n      });\n    });\n    dataSeries.dataPoints = dataPoints;\n    data.push(dataSeries); // const spanStyle = {\n    //   position: \"absolute\",\n    //   top: \"10px\",\n    //   fontSize: \"20px\",\n    //   fontWeight: \"bold\",\n    //   backgroundColor: \"#d85757\",\n    //   padding: \"0px 4px\",\n    //   color: \"#ffffff\"\n    // };\n\n    const options = {\n      zoomEnabled: true,\n      interactivityEnabled: false,\n      height: 600,\n      animationEnabled: true,\n      title: {\n        text: \"@\".concat(this.props.value[this.props.value.length - 1].toFixed(2), \"x\")\n      },\n      axisY: {\n        includeZero: false\n      },\n      data: data\n    };\n    return React.createElement(\"div\", {\n      style: {\n        height: \"60vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/weihung/Documents/workspace/dice/frontend/dice-demo/src/component/Chart.js"],"names":["React","Component","CanvasJSReact","CanvasJSChart","Chart","render","data","dataSeries","type","dataPoints","i","props","value","forEach","element","push","x","y","options","zoomEnabled","interactivityEnabled","height","animationEnabled","title","text","length","toFixed","axisY","includeZero","ref","chart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,0BAA1B,C,CACA;;AACA,IAAIC,aAAa,GAAGD,aAAa,CAACC,aAAlC,C,CAEA;;AAEA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC3C;AACA;AACA;AACA;AAEAI,EAAAA,MAAM,GAAG;AACP,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,UAAU,GAAG;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAjB;AACA,QAAIC,UAAU,GAAG,EAAjB;AACF,QAAIC,CAAC,GAAG,CAAR;AACE,SAAKC,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,CAAyBC,OAAO,IAAI;AAClCL,MAAAA,UAAU,CAACM,IAAX,CAAgB;AACdC,QAAAA,CAAC,EAAE,EAAEN,CADS;AAEdO,QAAAA,CAAC,EAAEH;AAFW,OAAhB;AAID,KALD;AAMAP,IAAAA,UAAU,CAACE,UAAX,GAAwBA,UAAxB;AACAH,IAAAA,IAAI,CAACS,IAAL,CAAUR,UAAV,EAZO,CAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMW,OAAO,GAAG;AACdC,MAAAA,WAAW,EAAE,IADC;AAEjBC,MAAAA,oBAAoB,EAAE,KAFL;AAGjBC,MAAAA,MAAM,EAAE,GAHS;AAIjBC,MAAAA,gBAAgB,EAAE,IAJD;AAKdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,aAAM,KAAKb,KAAL,CAAWC,KAAX,CAAiB,KAAKD,KAAL,CAAWC,KAAX,CAAiBa,MAAjB,GAA0B,CAA3C,EAA8CC,OAA9C,CAAsD,CAAtD,CAAN;AADC,OALO;AAQdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,WAAW,EAAE;AADR,OARO;AAWdtB,MAAAA,IAAI,EAAEA;AAXQ,KAAhB;AAcA,WACI;AAAK,MAAA,KAAK,EAAE;AAACe,QAAAA,MAAM,EAAC;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEH,OAAxB;AAAiC,MAAA,KAAK,EAAEW,GAAG,IAAK,KAAKC,KAAL,GAAaD,GAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADJ;AAMD;;AAlD0C","sourcesContent":["import React, { Component } from \"react\";\nimport CanvasJSReact from \"../assets/canvasjs.react\";\n// var CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\n// var startTime = 0, endTime = 0;\n\nexport default class Chart extends Component {\n  // componentDidMount() {\n  // \tendTime = new Date();\n  // \tdocument.getElementById(\"timeToRender\").innerHTML = \"Time to Render: \" + (endTime - startTime) + \"ms\";\n  // }\n\n  render() {\n    var data = [];\n    var dataSeries = { type: \"spline\" };\n    var dataPoints = [];\n\t\tvar i = 0;\n    this.props.value.forEach(element => {\n      dataPoints.push({\n        x: ++i,\n        y: element\n      });\n    });\n    dataSeries.dataPoints = dataPoints;\n    data.push(dataSeries);\n\n    // const spanStyle = {\n    //   position: \"absolute\",\n    //   top: \"10px\",\n    //   fontSize: \"20px\",\n    //   fontWeight: \"bold\",\n    //   backgroundColor: \"#d85757\",\n    //   padding: \"0px 4px\",\n    //   color: \"#ffffff\"\n    // };\n\n    const options = {\n      zoomEnabled: true,\n\t\t\tinteractivityEnabled: false,\n\t\t\theight: 600,\n\t\t\tanimationEnabled: true,\n      title: {\n        text: `@${this.props.value[this.props.value.length - 1].toFixed(2)}x`\n      },\n      axisY: {\n        includeZero: false\n      },\n      data: data\n    };\n\n    return (\n        <div style={{height:\"60vh\"}}>\n          <CanvasJSChart options={options} onRef={ref => (this.chart = ref)}/>\n          {/* <span id=\"timeToRender\" style={spanStyle}></span> */}\n        </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}