{"ast":null,"code":"import { getNamedFormat, filterProps, createError } from '../utils';\nconst RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\n\nfunction getFormatter({\n  locale,\n  formats,\n  onError\n}, getRelativeTimeFormat, options = {}) {\n  const format = options.format;\n  const defaults = !!format && getNamedFormat(formats, 'relative', format, onError) || {};\n  const filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n  return getRelativeTimeFormat(locale, filteredOptions);\n}\n\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options = {}) {\n  if (!unit) {\n    unit = 'second';\n  }\n\n  const RelativeTimeFormat = Intl.RelativeTimeFormat;\n\n  if (!RelativeTimeFormat) {\n    config.onError(createError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\"));\n  }\n\n  try {\n    return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n  } catch (e) {\n    config.onError(createError('Error formatting relative time.', e));\n  }\n\n  return String(value);\n}","map":null,"metadata":{},"sourceType":"module"}